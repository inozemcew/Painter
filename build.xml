<project name="Paint" default="run.NPainter" basedir="..">
    <description>
        simple example build file
    </description>
    <!-- set global properties for this build -->
    <property file="src/build.properties"/>

    <presetdef name="javac">
        <javac includeantruntime="false" />
    </presetdef>

    <taskdef resource="testngtasks" classpath="${test.lib.path}/testng.jar"/>

    <target name="info">
        <echo>Apache Ant version is ${ant.version} - ${src}</echo>
    </target>

    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
        <mkdir dir="${dist}"/>
        <mkdir dir="${test.build}"/>
    </target>

    <target name="compile.Painter" depends="init"
            description="compile the Painter module">
        <!-- Compile the java code from ${src} into ${build} -->
        <javac srcdir="${src}/Painter" destdir="${build}" includes="**/*.java"/>
        <echo >start copy</echo>
        <copy todir="${build}/resource" verbose="yes">
            <fileset dir="${src}/resource"/>
        </copy>
        <echo >end copy</echo>
    </target>

    <target name="compile.NPainter" depends="compile.Painter"
            description="compile the NPainter module">
        <!-- Compile the java code from ${src} into ${build} -->
        <javac srcdir="${src}/NPainter"
               sourcepath="" classpath="${build}"
               destdir="${build}"
               excludes="${test.path}/**"
        />
    </target>

    <target name="compile.Test.NPainter" depends="compile.NPainter"
            description="compile test unit for NPainter">
        <javac srcdir="${src}/NPainter"
               sourcepath=""
               destdir="${test.build}">
            <classpath>
                <pathelement path="${build}"/>
                <fileset dir="${test.lib.path}" includes="*.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="test.NPainter" depends="compile.Test.NPainter">

        <testng classpath="${test.build}:${build}"
                outputDir="${test.build}"
                haltOnFailure="true">

            <classpath >
                <fileset dir="${test.lib.path}" includes="*.jar"/>
            </classpath>
            <!-- Tell Ant what test classes need to run -->
            <classfileset dir="${test.build}" includes="NPainter/*Test.class" />

        </testng>
    </target>

    <target name="run.NPainter" depends="compile.NPainter" description="run compiled program">
        <java dir="${build}" classname="NPainter.NPainter" fork="yes">
            <classpath>
                <pathelement location="${build}"/>
            </classpath>
        </java>
    </target>

    <target name="dist.NPainter" depends="compile.NPainter"
            description="generate the distribution">

        <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
        <jar jarfile="${dist}/NPainter.jar" manifest="${src}/NPainter/META-INF/MANIFEST.MF">
            <fileset dir="${build}" includes="Painter/**"/>
            <fileset dir="${build}" includes="NPainter/**"/>
        </jar>
    </target>

    <target name="compile.APainter" depends="compile.Painter"
            description="compile the Painter module">
        <!-- Compile the java code from ${src} into ${build} -->
        <javac srcdir="${src}/APainter"  destdir="${build}"/>
    </target>

    <target name="run.APainter" depends="compile.APainter" description="run compiled program">
        <java dir="${build}/APainter" classname="APainter.APainter" fork="yes">
            <classpath>
                <pathelement location="${build}"/>
            </classpath>
        </java>
    </target>

    <target name="dist.APainter" depends="compile.APainter"
            description="generate the distribution">

        <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
        <jar jarfile="${dist}/APainter.jar" manifest="src/APainter/META-INF/MANIFEST.MF">
            <fileset dir="${build}" includes="Painter/**"/>
            <fileset dir="${build}" includes="APainter/**"/>
            <fileset dir="${build}" includes="resource/**"/>
        </jar>
    </target>

    <target name="clean"
            description="clean up">
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>
</project>